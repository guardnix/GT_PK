swagger: '2.0'
info:
  version: '0.1'
  title: 'GlobalTrans: personal kabinet API'
  description: 'Описание API личного кабинета.'
tags:
- name: Common
  description: 'Операции пользователя'
- name: Invoices
  description: 'Счета'
- name: Contracts
  description: 'Договоры'
- name: Freights
  description: 'Грузоперевозки'
paths:
  /login:
    post:
      summary: 'Авторизация пользователя в системе'
      operationId: postLogin
      description: 'Авторизация пользователя в системе. Логин - это не обязательно мыло. Почта клиента указывется в системе отдельно'
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: loginRequest
        description: 'Параметры авторизации'
        required: true
        schema:
          $ref: '#/definitions/loginRequestType'
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/loginResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Common
  /settings:
    get:
      summary: 'Получение параметров и настроек пользователя'
      operationId: getSettings
      description: 'Получение параметров и настроек пользователя'
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: token
          in: query
          description: 'Токен авторизации'
          required: true
          type: string
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/settingsResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Common
  /dashboardInfo:
    get:
      summary: 'Получение общих данных для Dashboard'
      operationId: getDashboardInfo
      description: 'Получение общих данных для Dashboard'
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: token
          in: query
          description: 'Токен авторизации'
          required: true
          type: string
        - name: partner
          in: query
          description: 'Выбранный клиент'
          required: true
          type: string
          format: uuid
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/dashboardInfoResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Common
  /changePassword:
      post:
        summary: 'Изменение пароля пользователя'
        operationId: postChangePassword
        description: 'Изменение пароля пользователя'
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - name: token
          in: query
          description: 'Токен авторизации'
          required: true
          type: string
        - in: body
          name: changePasswordRequest
          description: 'Данные нового пароля'
          required: true
          schema:
            $ref: '#/definitions/changePasswordRequestType'
        responses:
          200:
            description: 'Метод выполнен успешно'
            schema:
              $ref: '#/definitions/changePasswordResponseType'
          400:
            description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
            schema:
              $ref: '#/definitions/errorResponseType'
          401:
            description: 'Пользователь не авторизован'
            schema:
              $ref: '#/definitions/errorResponseType'
        tags:
          - Common
  /restorePassword:
    get:
      summary: 'Запрос на восстановление пароля'
      operationId: getRestorePassword
      description: 'Запрос на восстановление пароля. На почту клиента отправляется ссылка (формат нужно обсудить), при переходе по которой ему должна открыться форма с вводом нового пароля. После ввода выполняется POST запрос.'
      produces:
      - application/json
      parameters:
      - name: login
        in: query
        description: 'Логин пользователя'
        required: true
        type: string
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/restorePasswordResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Common
    post:
      summary: 'Обработка запроса на восстановление пароля'
      operationId: postRestorePassword
      description: 'Ответная часть механизма восстановление пароля. Вызывается после GET запроса из формы ввода нового пароля.'
      produces:
      - application/json
      parameters:
      - name: queryId
        in: query
        description: 'Идентификатор запроса, высылаемый на почту'
        required: true
        type: string
      - in: body
        name: restorePasswordRequest
        description: 'Данные нового пароля'
        required: true
        schema:
          $ref: '#/definitions/restorePasswordRequestType'
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/restorePasswordResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Common
  /invoices:
    get:
      summary: 'Получить список счетов'
      operationId: getInvoices
      description: 'Получить список счетов'
      produces:
      - application/json
      parameters:
      - name: token
        in: query
        description: 'Токен авторизации'
        required: true
        type: string
      - name: partner
        in: query
        description: 'Выбранный клиент'
        required: true
        type: string
        format: uuid
      - name: invoiceType
        in: query
        description: 'Вид счета'
        required: false
        type: string
        enum:
        - 'open'
        - 'expired'
        - 'all'
        default: 'all'
      - name: dateFrom
        in: query
        description: 'Дата начала выборки'
        required: false
        type: string
        format: date-time
      - name: dateTo
        in: query
        description: 'Дата окончания выборки'
        required: false
        type: string
        format: date-time
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/invoicesResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Invoices
  /invoices/report:
    get:
      summary: 'Получить отчет по счетам'
      operationId: getInvoicesReport
      description: 'Получить отчет по счетам'
      produces:
      - application/json
      parameters:
      - name: token
        in: query
        description: 'Токен авторизации'
        required: true
        type: string
      - name: partner
        in: query
        description: 'Выбранный клиент'
        required: true
        type: string
        format: uuid
      - name: reportDetailType
        in: query
        description: 'Вид детализации отчета'
        type: string
        enum:
        - 'containerInvoice'
        - 'invoice'
        default: 'containerInvoice'
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/invoicesReportResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Invoices
  /invoice/{invoiceID}/downloadInvoice:
    get:
      summary: 'Получить печатную форму счета'
      operationId: getInvoicePrintForm
      description: 'Получить печатную форму счета'
      produces:
      - application/json
      parameters:
      - name: invoiceID
        in: path
        description: 'uuid счета'
        required: true
        type: string
        format: uuid
      - name: token
        in: query
        description: 'Токен авторизации'
        required: true
        type: string
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/downloadInvoiceResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Invoices
  /contracts:
    get:
      summary: 'Получить список договоров'
      operationId: getContracts
      description: 'Получить список договоров'
      produces:
      - application/json
      parameters:
      - name: token
        in: query
        description: 'Токен авторизации'
        required: true
        type: string
      - name: partner
        in: query
        description: 'Выбранный клиент'
        required: true
        type: string
        format: uuid
      - name: contractType
        in: query
        description: 'Вид договора'
        required: false
        type: string
        enum:
        - 'open'
        - 'close'
        - 'all'
        default: 'all'
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/contractsResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Contracts
  /freights:
    get:
      summary: 'Получить список грузоперевозок'
      operationId: getFreights
      description: 'Получить список грузоперевозок'
      produces:
      - application/json
      parameters:
      - name: token
        in: query
        description: 'Токен авторизации'
        required: true
        type: string
      - name: partner
        in: query
        description: 'Выбранный клиент'
        required: true
        type: string
        format: uuid
      - name: freightType
        in: query
        description: 'Тип перевозки. Доступные ID перевозок возвращаются методом settings'
        required: false
        type: string
        format: uuid
      - name: dateFrom
        in: query
        description: 'Дата начала выборки'
        required: false
        type: string
        format: date-time
      - name: dateTo
        in: query
        description: 'Дата окончания выборки'
        required: false
        type: string
        format: date-time
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/freightsResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Freights
  /managerInfo:
    get:
      summary: 'Получение данных о менеджере'
      operationId: getManagerInfo
      description: 'Получение данных о менеджере'
      produces:
      - application/json
      parameters:
      - name: token
        in: query
        description: 'Токен авторизации'
        required: true
        type: string
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/managerInfoResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Common
  /sendMessage:
    post:
      summary: 'Отправка сообщения'
      operationId: postSendMessage
      description: 'Отправка сообщения'
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: token
        in: query
        description: 'Токен авторизации'
        required: true
        type: string
      - in: body
        name: sendMessageRequest
        description: 'Данные нового пароля'
        required: true
        schema:
          $ref: '#/definitions/sendMessageRequestType'
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/sendMessageResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Common
  /contactInfo:
    get:
      summary: 'Получение контактных данных пользователя'
      operationId: getContactInfo
      description: 'Получение контактных данных пользователя'
      produces:
      - application/json
      parameters:
      - name: token
        in: query
        description: 'Токен авторизации'
        required: true
        type: string
      - name: partner
        in: query
        description: 'Выбранный клиент'
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/contactInfoResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Common
    post:
      summary: 'Изменение контактных данных пользователя'
      operationId: postContactInfo
      description: 'Изменение контактных данных пользователя'
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: token
        in: query
        description: 'Токен авторизации'
        required: true
        type: string
      - name: partner
        in: query
        description: 'Выбранный клиент'
        required: true
        type: string
        format: uuid
      - in: body
        name: contactInfoRequest
        description: 'Новые контактные данные'
        required: true
        schema:
          $ref: '#/definitions/contactInfoRequestType'
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/contactInfoResponseType'
        400:
          description: 'Ошибка при выполнении запроса. Детальное описание содержится в теле ответа'
          schema:
            $ref: '#/definitions/errorResponseType'
        401:
          description: 'Пользователь не авторизован'
          schema:
            $ref: '#/definitions/errorResponseType'
      tags:
        - Common
  /logout:
    get:
      summary: 'Выход пользователя из системы'
      operationId: getLogout
      description: 'Выход пользователя из системы'
      produces:
      - application/json
      parameters:
      - name: token
        in: query
        description: 'Токен авторизации'
        required: true
        type: string
      responses:
        200:
          description: 'Метод выполнен успешно'
          schema:
            $ref: '#/definitions/logoutResponseType'
      tags:
        - Common
definitions:
  errorResponseType:
    type: object
    required:
    - result
    - errorDescription
    properties:
      result:
        type: integer
        format: int32
        example: 1
        description: 'Код ошибки. Состав кодов ошибок и их описаний сформирую в процессе'
      errorDescription:
        type: string
        example: 'Детальное описание ошибки в удобочитаемом для пользователя виде'
  loginRequestType:
    type: object
    required:
    - login
    - password
    properties:
      login:
        type: string
        example: 'ivan'
      password:
        type: string
        example: 'nfuqwhf3f'
  loginResponseType:
    type: object
    required:
    - result
    - token
    - dateExpired
    properties:
      result:
        type: integer
        format: int32
        example: 0
      token:
        type: string
        example: 'e54ab2c9eb8a2cd99e33aa2f1b0055c78c20bd3b'
        description: 'по-сути SHA1 хеш'
      dateExpired:
        type: string
        format: date-time
        example: '2020-02-15T09:12:33'
  settingsResponseType:
    type: object
    required:
    - result
    - partners
    - freightTypes
    properties:
      result:
        type: integer
        format: int32
        example: 0
      partners:
        type: array
        items:
          type: object
          required: 
          - uuid
          - name
          properties:
            uuid:
              type: string
              format: uuid
              example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
            name:
              type: string
              example: 'ООО Рога и копыта'
      freightTypes:
        type: array
        items:
          type: object
          required: 
          - uuid
          - name
          properties:
            uuid:
              type: string
              format: uuid
              example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
            name:
              type: string
              example: 'АВТОПЕРЕВОЗКА FTL ИМПОРТ ИЗ ЕВРОПЫ В РФ и ЕАЭС (ТЕНТ)'
  dashboardInfoResponseType:
    type: object
    required:
    - result
    - debtAmount
    properties:
      result:
        type: integer
        format: int32
        example: 0
      debtAmount:
        type: number
        example: 152648.48
  logoutResponseType:
    type: object
    required:
    - result
    properties:
      result:
        type: integer
        format: int32
        example: 0
  changePasswordRequestType:
    type: object
    required:
    - newPassword
    properties:
      newPassword:
        type: string
        example: 'nfuqwhf3f'
        description: 'Про пароль см. в методе Login'
  changePasswordResponseType:
    type: object
    required:
    - result
    properties:
      result:
        type: integer
        format: int32
        example: 0
  restorePasswordRequestType:
    type: object
    required:
    - newPassword
    properties:
      newPassword:
        type: string
        example: 'nfuqwhf3f'
        description: 'Про пароль см. в методе Login'
  restorePasswordResponseType:
    type: object
    required:
    - result
    properties:
      result:
        type: integer
        format: int32
        example: 0
  invoicesResponseType:
    type: object
    required:
    - result
    - invoices
    properties:
      result:
        type: integer
        format: int32
        example: 0
      invoices:
        type: array
        items:
          type:
            object
          required:
          - col
          - rows
          properties:
            col:
              type: array
              items:
                type: object
                required:
                - name
                - description
                - ord_num
                properties:
                  name:
                    type: string
                    example: 'column_1'
                  description:
                    type: string
                    example: 'Моя колонка 1'
                  ord_num:
                    type: integer
                    example: 1
                    description: 'Порядковый номер колонки как это задано в 1С'
              description: 'Шапка таблицы - массив колонок.'
            rows:
              type: array
              items:
                type: object
                required:
                - uuid
                - row
                properties:
                  uuid:
                    type: string
                    format: uuid
                    example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
                  row:
                    type: array
                    items:
                      type: object
                      required:
                        - val
                        - color
                      properties:
                        val:
                          example: 'мое значение 1'
                        color:
                          type: string
                          example: '#33ACFC'
                          description: 'Цвет для оформления значения'
              description: 'Массив строк. Каждая строка - массив ячеек (идентично массиву колонок).'
  contractsResponseType:
    type: object
    required:
    - result
    - contracts
    properties:
      result:
        type: integer
        format: int32
        example: 0
      contracts:
        type: array
        items:
          type:
            object
          required:
          - col
          - rows
          properties:
            col:
              type: array
              items:
                type: object
                required:
                - name
                - description
                - ord_num
                properties:
                  name:
                    type: string
                    example: 'column_1'
                  description:
                    type: string
                    example: 'Моя колонка 1'
                  ord_num:
                    type: integer
                    example: 1
                    description: 'Порядковый номер колонки как это задано в 1С'
              description: 'Шапка таблицы - массив колонок.'
            rows:
              type: array
              items:
                type: object
                required:
                - uuid
                - row
                properties:
                  uuid:
                    type: string
                    format: uuid
                    example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
                  row:
                    type: array
                    items:
                      type: object
                      required:
                        - val
                        - color
                      properties:
                        val:
                          example: 'мое значение 1'
                        color:
                          type: string
                          example: '#33ACFC'
                          description: 'Цвет для оформления значения'
              description: 'Массив строк. Каждая строка - массив ячеек (идентично массиву колонок).'
  freightsResponseType:
    type: object
    required:
    - result
    - freights
    properties:
      result:
        type: integer
        format: int32
        example: 0
      freights:
        type: array
        items:
          type:
            object
          required:
          - col
          - rows
          properties:
            col:
              type: array
              items:
                type: object
                required:
                - name
                - description
                - ord_num
                properties:
                  name:
                    type: string
                    example: 'column_1'
                  description:
                    type: string
                    example: 'Моя колонка 1'
                  ord_num:
                    type: integer
                    example: 1
                    description: 'Порядковый номер колонки как это задано в 1С'
              description: 'Шапка таблицы - массив колонок.'
            rows:
              type: array
              items:
                type: object
                required:
                - uuid
                - row
                properties:
                  uuid:
                    type: string
                    format: uuid
                    example: 'd290f1ee-6c54-4b01-90e6-d701748f0851'
                  row:
                    type: array
                    items:
                      type: object
                      required:
                        - val
                        - color
                      properties:
                        val:
                          example: 'мое значение 1'
                        color:
                          type: string
                          example: '#33ACFC'
                          description: 'Цвет для оформления значения'
              description: 'Массив строк. Каждая строка - массив ячеек (идентично массиву колонок).'
  downloadInvoiceResponseType:
    type: object
    required:
    - result
    - fileName
    - fileData
    properties:
      result:
        type: integer
        format: int32
        example: 0
      fileName:
        type: string
        example: 'invoice_1.pdf'
      fileData:
        type: string
        description: 'Данные файла, закодированные в BASE64'
        example: 'ZXJnZXJnZQ=='
  invoicesReportResponseType:
    type: object
    required:
    - result
    - fileName
    - fileData
    properties:
      result:
        type: integer
        format: int32
        example: 0
      fileName:
        type: string
        example: 'invoiceReport.pdf'
      fileData:
        type: string
        description: 'Данные файла, закодированные в BASE64'
        example: 'ZXJnZXJnZQ=='
  managerInfoResponseType:
    type: object
    required:
    - result
    - FIO
    - workTel
    - mobTel
    - email
    - picture
    properties:
      result:
        type: integer
        format: int32
        example: 0
      FIO:
        type: string
        example: 'Иванов Иван Иванович'
      workTel:
        type: string
        example: '8 800 123 45 67'
      mobTel:
        type: string
        example: '8 800 123 45 67'
      email:
        type: string
        example: 'info@domain.com'
      picture:
        type: string
        description: 'Данные файла, закодированные в BASE64'
        example: 'ZXJnZXJnZQ=='
  sendMessageRequestType:
    type: object
    required:
    - message
    properties:
      message:
        type: string
        example: 'Добрый день. Перезвоните для согласования сделки.'
  sendMessageResponseType:
    type: object
    required:
    - result
    properties:
      result:
        type: integer
        format: int32
        example: 0
  contactInfoRequestType:
    type: object
    required:
    - lastName
    - firstName
    - middleName
    - workTel
    - mobTel
    - email
    properties:
      lastName:
        type: string
        example: 'Иванов'
      firstName:
        type: string
        example: 'Иван'
      middleName:
        type: string
        example: 'Иванович'
      workTel:
        type: string
        example: '8 800 123 45 67'
      mobTel:
        type: string
        example: '8 800 123 45 67'
      email:
        type: string
        example: 'info@domain.com'
  contactInfoResponseType:
    type: object
    required:
    - result
    - lastName
    - firstName
    - middleName
    - workTel
    - mobTel
    - email
    properties:
      result:
        type: integer
        format: int32
        example: 0
      lastName:
        type: string
        example: 'Иванов'
      firstName:
        type: string
        example: 'Иван'
      middleName:
        type: string
        example: 'Иванович'
      workTel:
        type: string
        example: '8 800 123 45 67'
      mobTel:
        type: string
        example: '8 800 123 45 67'
      email:
        type: string
        example: 'info@domain.com'
schemes:
 - https
 - http
host: 127.0.0.1
basePath: /pubName/hs/pk